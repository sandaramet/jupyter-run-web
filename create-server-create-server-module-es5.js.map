{"version":3,"sources":["webpack:///src/app/pages/home/create-server/create-server.page.html","webpack:///src/app/pages/home/create-server/create-server-routing.module.ts","webpack:///src/app/pages/home/create-server/create-server.module.ts","webpack:///src/app/pages/home/create-server/create-server.page.scss","webpack:///src/app/pages/home/create-server/create-server.page.ts"],"names":["routes","path","component","CreateServerPageRoutingModule","imports","forChild","exports","CreateServerPageModule","declarations","schemas","baseUrl","CreateServerPage","data","router","alertController","loading","regions","machineTypes","newVM","name","region","vmType","jupyterPassword","msg","create","cssClass","header","message","buttons","alert","present","localStorage","getItem","getRegionsAndMachineTypes","subscribe","console","log","push","setItem","String","split","createVM","res","presentAlert","navigateByUrl","addVMIdToFirebase","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAYA,QAAaC,6BAA6B;AAAA;AAAA,KAA1C;;AAAaA,iCAA6B,6DAJzC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIyC,GAA7BH,6BAA6B,CAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIb,QAAaI,sBAAsB;AAAA;AAAA,KAAnC;;AAAaA,0BAAsB,6DAVlC,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,2FAJO,CADD;AAORI,kBAAY,EAAE,CAAC,oEAAD,CAPN;AAQRC,aAAO,EAAC,CAAC,oEAAD;AARA,KAAT,CAUkC,GAAtBF,sBAAsB,CAAtB;;;;;;;;;;;;;;;;ACpBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCKPG,O,GAAY,qE,CAAZA,O;;AAYR,QAAaC,gBAAgB;AAW3B,gCAAoBC,IAApB,EAA+CC,MAA/C,EAAsEC,eAAtE,EAAwG;AAAA;;AAApF,aAAAF,IAAA,GAAAA,IAAA;AAA2B,aAAAC,MAAA,GAAAA,MAAA;AAAuB,aAAAC,eAAA,GAAAA,eAAA;AAVtE,aAAAC,OAAA,GAAmB,KAAnB;AACA,aAAAC,OAAA,GAAyB,EAAzB;AACA,aAAAC,YAAA,GAA8B,EAA9B;AACA,aAAAC,KAAA,GAAe;AACbC,cAAI,EAAE,EADO;AAEbC,gBAAM,EAAE,EAFK;AAGbC,gBAAM,EAAE,EAHK;AAIbC,yBAAe,EAAE;AAJJ,SAAf;AAO2G;;AAXhF;AAAA;AAAA,qCAYRC,GAZQ,EAYK;;;;;;;;AAChB,2BAAM,KAAKT,eAAL,CAAqBU,MAArB,CAA4B;AAC9CC,8BAAQ,EAAE,iBADoC;AAE9CC,4BAAM,EAAE,OAFsC;AAG9CC,6BAAO,EAAEJ,GAHqC;AAI9CK,6BAAO,EAAE,CAAC,IAAD;AAJqC,qBAA5B,CAAN;;;AAARC,yB;;AAON,2BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;AACD;AArB0B;AAAA;AAAA,mCAuBhB;AAAA;;AACT,cAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,KAAmC,IAAvC,EAA6C;AAC3C,gBAAID,YAAY,CAACC,OAAb,CAAqB,aAArB,KAAuC,IAA3C,EAAiD;AAC/C,mBAAKpB,IAAL,CAAUqB,yBAAV,GAAsCC,SAAtC,CAAgD,UAAAtB,IAAI,EAAI;AACtDuB,uBAAO,CAACC,GAAR,CAAYxB,IAAZ;;AACA,oBAAImB,YAAY,CAACC,OAAb,CAAqB,SAArB,KAAmC,IAAvC,EAA6C;AAC3CG,yBAAO,CAACC,GAAR,CAAYL,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAZ;;AAD2C,6DAExBpB,IAAI,CAAC,UAAD,CAFoB;AAAA;;AAAA;AAE3C,wEAAqC;AAAA,0BAA5BQ,MAA4B;;AACnC,2BAAI,CAACJ,OAAL,CAAaqB,IAAb,CAAkBjB,MAAM,CAAC,MAAD,CAAxB;AACD;AAJ0C;AAAA;AAAA;AAAA;AAAA;;AAK3CW,8BAAY,CAACO,OAAb,CAAqB,SAArB,EAAgCC,MAAM,CAAC,KAAI,CAACvB,OAAN,CAAtC;AACD;;AACD,oBAAIe,YAAY,CAACC,OAAb,CAAqB,aAArB,KAAuC,IAA3C,EAAiD;AAC/CG,yBAAO,CAACC,GAAR,CAAYL,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAZ;;AAD+C,8DAEtBpB,IAAI,CAAC,aAAD,CAFkB;AAAA;;AAAA;AAE/C,2EAA8C;AAAA,0BAArCK,YAAqC;;AAC5C,2BAAI,CAACA,YAAL,CAAkBoB,IAAlB,CAAuBpB,YAAY,CAAC,MAAD,CAAnC;AACD;AAJ8C;AAAA;AAAA;AAAA;AAAA;;AAK/Cc,8BAAY,CAACO,OAAb,CAAqB,cAArB,EAAqCC,MAAM,CAAC,KAAI,CAACtB,YAAN,CAA3C;AACD;AACF,eAhBD;AAiBD;AACF,WApBD,MAqBK;AACHkB,mBAAO,CAACC,GAAR,CAAY,MAAZ;AACA,iBAAKpB,OAAL,GAAee,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCQ,KAAhC,CAAsC,GAAtC,CAAf;AACA,iBAAKvB,YAAL,GAAoBc,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCQ,KAArC,CAA2C,GAA3C,CAApB;AAED;AACF;AAnD0B;AAAA;AAAA,mCAoDhB;AAAA;;AACT,eAAKzB,OAAL,GAAe,IAAf;AACAoB,iBAAO,CAACC,GAAR,CAAY,KAAKlB,KAAjB;AAEA,eAAKN,IAAL,CAAU6B,QAAV,CAAmB,KAAKvB,KAAxB,EAA+BgB,SAA/B,CAAyC,UAAAQ,GAAG,EAAI;AAC9CP,mBAAO,CAACC,GAAR,CAAYM,GAAZ;;AACA,gBAAIA,GAAG,CAAC,YAAD,CAAH,IAAqB,GAAzB,EAA8B;AAE5B,oBAAI,CAACC,YAAL,CAAkB,2DAAlB;;AACA,oBAAI,CAAC9B,MAAL,CAAY+B,aAAZ,CAA0B,OAA1B;;AACA,oBAAI,CAAChC,IAAL,CAAUiC,iBAAV,CAA4BH,GAAG,CAAC,MAAD,CAA/B,EAAyC,MAAI,CAACxB,KAAL,CAAWC,IAApD;AACD,aALD,MAKO;AACL,oBAAI,CAACwB,YAAL,CAAkBD,GAAG,CAAC,OAAD,CAArB;AACD;;AACD,kBAAI,CAAC3B,OAAL,GAAe,KAAf;AACD,WAXD,EAJS,CAmBT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAlF0B;;AAAA;AAAA,OAA7B;;;;cAW4B;;cAA6B;;cAAgC;;;;AAX5EJ,oBAAgB,6DAL5B,gEAAU;AACTmC,cAAQ,EAAE,mBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,qHAFS;;;;AAAA,KAAV,CAK4B,GAAhBpC,gBAAgB,CAAhB","file":"create-server-create-server-module-es5.js","sourcesContent":["export default \"<app-header>\\n</app-header>\\n<ion-content>\\n  <ion-progress-bar [attr.type]=\\\"loading == true ? 'indeterminate' : ''\\\"></ion-progress-bar>\\n  <ion-grid fixed>\\n    <ion-row>\\n      <ion-col size-xs=\\\"12\\\" offset-md=\\\"4\\\" size-md=\\\"4\\\">\\n        <form (ngSubmit)=\\\"onSubmit()\\\">\\n          <ion-item class=\\\"ion-margin-vertical\\\">\\n            <ion-input required placeholder=\\\"Name\\\" name=\\\"name\\\" type=\\\"text\\\"\\n              [(ngModel)]=\\\"newVM.name\\\"></ion-input>\\n          </ion-item>\\n          <ion-item class=\\\"ion-margin-vertical\\\">\\n            <ion-label>Region</ion-label>\\n            <ion-select value=\\\"\\\" placeholder=\\\"Select Region\\\" name=\\\"region\\\"\\n              [(ngModel)]=\\\"newVM.region\\\" interface=\\\"action-sheet\\\">\\n              <ng-template ngFor let-region [ngForOf]=\\\"regions\\\">\\n                <ion-select-option [value]=region>{{region}}</ion-select-option>\\n              </ng-template>\\n            </ion-select>\\n          </ion-item>\\n          <ion-item class=\\\"ion-margin-vertical\\\">\\n            <ion-label>VM type</ion-label>\\n            <ion-select value=\\\"\\\" placeholder=\\\"Select type\\\" name=\\\"vmType\\\"\\n              [(ngModel)]=\\\"newVM.vmType\\\" interface=\\\"action-sheet\\\">\\n              <ng-template ngFor let-machineType [ngForOf]=\\\"machineTypes\\\">\\n                <ion-select-option [value]=machineType>{{machineType}}</ion-select-option>\\n              </ng-template>\\n            </ion-select>\\n          </ion-item>\\n          <ion-item class=\\\"ion-margin-vertical\\\">\\n            <ion-input required placeholder=\\\"Jupyter password\\\"\\n              name=\\\"jupyterPassword\\\" type=\\\"password\\\"\\n              [(ngModel)]=\\\"newVM.jupyterPassword\\\">\\n            </ion-input>\\n          </ion-item>\\n          <ion-button routerLink=\\\"/home\\\" color=\\\"danger\\\"\\n            class=\\\"ion-margin-vertical\\\">\\n            back\\n          </ion-button>\\n          <ion-button color=\\\"success\\\" fill=\\\"solid\\\" type=\\\"submit\\\"\\n            class=\\\"ion-margin-vertical\\\">\\n            <ion-icon slot=\\\"start\\\" name=\\\"create-outline\\\"></ion-icon>\\n            Create\\n          </ion-button>\\n        </form>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateServerPage } from './create-server.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CreateServerPage,\n  }\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CreateServerPageRoutingModule { }\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CreateServerPageRoutingModule } from './create-server-routing.module';\n\nimport { CreateServerPage } from './create-server.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CreateServerPageRoutingModule\n  ],\n  declarations: [CreateServerPage],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class CreateServerPageModule {}\n","export default \"ion-button:last-child {\\n  float: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3NhbmRhcmFtZXQvRG9jdW1lbnRzL2p1cHl0ZXItcnVuL3NyYy9hcHAvcGFnZXMvaG9tZS9jcmVhdGUtc2VydmVyL2NyZWF0ZS1zZXJ2ZXIucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9ob21lL2NyZWF0ZS1zZXJ2ZXIvY3JlYXRlLXNlcnZlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9ob21lL2NyZWF0ZS1zZXJ2ZXIvY3JlYXRlLXNlcnZlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tYnV0dG9uOmxhc3QtY2hpbGR7XG4gICAgZmxvYXQ6IHJpZ2h0O1xufSIsImlvbi1idXR0b246bGFzdC1jaGlsZCB7XG4gIGZsb2F0OiByaWdodDtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\nimport { Router } from '@angular/router';\nimport { environment } from \"../../../../environments/environment\";\nimport { AlertController } from '@ionic/angular';\nconst { baseUrl } = environment\ninterface NewVM {\n  name: string;\n  region: string;\n  vmType: string;\n  jupyterPassword: string\n}\n@Component({\n  selector: 'app-create-server',\n  templateUrl: './create-server.page.html',\n  styleUrls: ['./create-server.page.scss'],\n})\nexport class CreateServerPage implements OnInit {\n  loading: boolean = false\n  regions: Array<string> = []\n  machineTypes: Array<string> = []\n  newVM: NewVM = {\n    name: \"\",\n    region: \"\",\n    vmType: \"\",\n    jupyterPassword: \"\"\n\n  }\n  constructor(private data: DataService, private router: Router, public alertController: AlertController) { }\n  async presentAlert(msg: string) {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Alert',\n      message: msg,\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n  ngOnInit() {\n    if (localStorage.getItem('regions') == null) {\n      if (localStorage.getItem('machineType') == null) {\n        this.data.getRegionsAndMachineTypes().subscribe(data => {\n          console.log(data)\n          if (localStorage.getItem('regions') == null) {\n            console.log(localStorage.getItem('regions'))\n            for (let region of data['regionas']) {\n              this.regions.push(region['name'])\n            }\n            localStorage.setItem(\"regions\", String(this.regions))\n          }\n          if (localStorage.getItem('machineType') == null) {\n            console.log(localStorage.getItem('machineType'))\n            for (let machineTypes of data['machineType']) {\n              this.machineTypes.push(machineTypes['name'])\n            }\n            localStorage.setItem(\"machineTypes\", String(this.machineTypes))\n          }\n        })\n      }\n    }\n    else {\n      console.log(\"else\")\n      this.regions = localStorage.getItem(\"regions\").split(\",\")\n      this.machineTypes = localStorage.getItem(\"machineTypes\").split(\",\")\n\n    }\n  }\n  onSubmit() {\n    this.loading = true\n    console.log(this.newVM)\n\n    this.data.createVM(this.newVM).subscribe(res => {\n      console.log(res)\n      if (res['statusCode'] == 200) {\n\n        this.presentAlert('You sucsesfuly created new VM it will available in 10 min')\n        this.router.navigateByUrl('/home')\n        this.data.addVMIdToFirebase(res['data'], this.newVM.name)\n      } else {\n        this.presentAlert(res['error'])\n      }\n      this.loading = false\n    })\n\n\n\n    // fetch(`${baseUrl}/createVirtualMachine?uid=81wXgHbek5NFN7GgPCf4cgERxB22&name=${this.newVM.name}&machine_type=${this.newVM.vmType}&password=${this.newVM.jupyterPassword}&region=${this.newVM.region}`, {\n    //   method: 'GET',\n    //   redirect: 'follow'\n    // })\n    //   .then(response => response.json())\n    //   .then(result => {\n    //     console.log(result)\n    //     alert(\"You sucsesfuly created new VM it will available in 10 min\")\n    //     this.router.navigateByUrl('/home')\n    //   })\n    //   .catch(error => console.log(alert(error)));\n  }\n\n}\n"]}